{"ast":null,"code":"var _jsxFileName = \"/Users/arnavakula/Code/learning/movie-recommender/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\n\n//take input from user\n//use the input to call OpenAI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([{\n    title: '',\n    rating: 0\n  }, {\n    title: '',\n    rating: 0\n  }, {\n    title: '',\n    rating: 0\n  }]);\n  const [recommendations, setRecommendations] = useState([]);\n  const handleInputChange = (index, field, value) => {\n    const newMovies = [...movies];\n    newMovies[index][field] = value;\n    setMovies(newMovies);\n  };\n  const handleStarClick = (index, starNumber) => {\n    handleInputChange(index, 'rating', starNumber);\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await ('https://localhost:3001/get-recommendations', {\n        method: 'POST',\n        headers: {\n          'Content=Type': 'application/json'\n        }\n      });\n    } catch {}\n    set;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome, it is time for movie recommendations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Movie Title\",\n            value: movie.title,\n            onChange: e => handleInputChange(index, 'title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [1, 2, 3, 4, 5].map(starNumber => /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => handleStarClick(index, starNumber),\n              style: {\n                cursor: 'pointer'\n              },\n              children: starNumber <= movie.rating ? '★' : '☆'\n            }, starNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Get Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommended Movies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: recommendations.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: movie\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rp28Vofl6Bzt5xUc6l15/D565UI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","title","rating","recommendations","setRecommendations","handleInputChange","index","field","value","newMovies","handleStarClick","starNumber","handleSubmit","response","method","headers","set","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","map","movie","placeholder","onChange","target","onClick","style","cursor","_c","$RefreshReg$"],"sources":["/Users/arnavakula/Code/learning/movie-recommender/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\n//take input from user\n//use the input to call OpenAI\n\nfunction App() {\n  const [movies, setMovies] = useState([\n    {title: '', rating: 0},\n    {title: '', rating: 0},\n    {title: '', rating: 0},\n  ])\n\n  const [recommendations, setRecommendations] = useState([])\n  \n  const handleInputChange = (index, field, value) => {\n    const newMovies = [...movies]\n    newMovies[index][field] = value;\n    setMovies(newMovies);\n\n  }\n\n  const handleStarClick = (index, starNumber) => {\n    handleInputChange(index, 'rating', starNumber);\n  }   \n\n  const handleSubmit = async () => {\n    try {\n      const response = await('https://localhost:3001/get-recommendations', {\n        method: 'POST',\n        headers: {\n          'Content=Type': 'application/json'\n        }\n      })\n    } catch {\n\n    }\n    set\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Welcome, it is time for movie recommendations!\n        </p>\n\n        <form onSubmit={e => e.preventDefault()}>\n          {movies.map((movie, index) => (\n            <div key={index}>\n              <input placeholder=\"Movie Title\" \n              value={movie.title} \n              onChange={e => handleInputChange(index, 'title', e.target.value)} />\n              <div>\n                {[1, 2, 3, 4, 5].map(starNumber => (\n                  <span \n                    key={starNumber}\n                    onClick={() => handleStarClick(index, starNumber)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    {starNumber <= movie.rating ? '★' : '☆'}\n                  </span>\n                ))}\n              </div>\n            </div>\n          ))}\n        </form>\n        <button onClick={handleSubmit}>Get Recommendations</button>\n        <div>\n          <h2>Recommended Movies:</h2>\n          <ul>\n            {recommendations.map((movie, index) => (\n              <li key={index}>{movie}</li>\n            ))}\n          </ul>\n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}